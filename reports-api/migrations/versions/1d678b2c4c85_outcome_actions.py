"""outcome actions

Revision ID: 1d678b2c4c85
Revises: 3b79a318a4d4
Create Date: 2023-09-17 14:11:26.255330

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '1d678b2c4c85'
down_revision = '3b79a318a4d4'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('outcome_actions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('outcome_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('additional_params', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('sort_order', sa.Integer(), nullable=False),
    sa.Column('created_by', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.Column('updated_by', sa.String(length=255), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default='t', nullable=False),
    sa.Column('is_deleted', sa.Boolean(), server_default='f', nullable=False),
    sa.ForeignKeyConstraint(['outcome_id'], ['outcomes.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sqlite_autoincrement=True
    )
    op.create_table('outcome_actions_history',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('outcome_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('name', sa.String(), autoincrement=False, nullable=False),
    sa.Column('additional_params', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('sort_order', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.String(length=255), autoincrement=False, nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.String(length=255), autoincrement=False, nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.Boolean(), autoincrement=False, nullable=False),
    sa.Column('is_deleted', sa.Boolean(), autoincrement=False, nullable=False),
    sa.Column('pk', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('during', postgresql.TSTZRANGE(), nullable=True),
    sa.ForeignKeyConstraint(['outcome_id'], ['outcomes.id'], ),
    sa.PrimaryKeyConstraint('id', 'pk'),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('works', schema=None) as batch_op:
        batch_op.add_column(sa.Column('start_date_locked', sa.Boolean(), nullable=True))

    with op.batch_alter_table('works_history', schema=None) as batch_op:
        batch_op.add_column(sa.Column('start_date_locked', sa.Boolean(), autoincrement=False, nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('works_history', schema=None) as batch_op:
        batch_op.drop_column('start_date_locked')

    with op.batch_alter_table('works', schema=None) as batch_op:
        batch_op.drop_column('start_date_locked')

    op.drop_table('outcome_actions_history')
    op.drop_table('outcome_actions')
    # ### end Alembic commands ###
