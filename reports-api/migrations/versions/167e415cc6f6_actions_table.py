"""actions table

Revision ID: 167e415cc6f6
Revises: 30f5edbb77c2
Create Date: 2023-09-23 13:49:11.641471

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '167e415cc6f6'
down_revision = '30f5edbb77c2'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    action_table = op.create_table('actions',
                                   sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                                   sa.Column('name', sa.String(), nullable=True),
                                   sa.Column('description', sa.String(), nullable=True),
                                   sa.Column('created_by', sa.String(length=255), nullable=True),
                                   sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
                                   sa.Column('updated_by', sa.String(length=255), nullable=True),
                                   sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
                                   sa.Column('is_active', sa.Boolean(), server_default='t', nullable=False),
                                   sa.Column('is_deleted', sa.Boolean(), server_default='f', nullable=False),
                                   sa.PrimaryKeyConstraint('id'),
                                   sqlite_autoincrement=True
                                   )
    op.create_table('actions_history',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('name', sa.String(), autoincrement=False, nullable=True),
    sa.Column('description', sa.String(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.String(length=255), autoincrement=False, nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.String(length=255), autoincrement=False, nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.Boolean(), autoincrement=False, nullable=False),
    sa.Column('is_deleted', sa.Boolean(), autoincrement=False, nullable=False),
    sa.Column('pk', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('during', postgresql.TSTZRANGE(), nullable=True),
    sa.PrimaryKeyConstraint('id', 'pk'),
    sqlite_autoincrement=True
    )
    actions = [
        {
            "name": "CompleteCurrentPhase",
            "description": "Setting actual date closes the current phase and set the start of the next phase"
        },
        {
            "name": "DisableWorkStartDate",
            "description": "Set the startdate of the work and lock further date changes"
        },
        {
            "name": "CloseEverything",
            "description": "All Events are \"Closed\" or DELETED, Work is \"Closed\", Project is \"Closed\""
        },
        {
            "name": "DuplicatePhase",
            "description": "Duplicate the given phase"
        },
        {
            "name": "DeactivateAllEvents",
            "description": "Set is_active flag to false of all events from the point of action execution"
        },
        {
            "name": "DeleteAllEvents",
            "description": "Set is_deleted flag to true of all events from the point of action execution"
        },
        {
            "name": "CloseWork",
            "description": "Closes the work"
        },
        {
            "name": "CreateNewWork",
            "description": "Create a new work of the given type from the existing work information"
        }
    ]
    conn = op.get_bind()
    for action in actions:
        conn.execute(
            action_table.insert().values(**action)
        )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('actions_history')
    op.drop_table('actions')
    # ### end Alembic commands ###
