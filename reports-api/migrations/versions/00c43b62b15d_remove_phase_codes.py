"""remove_phase_codes

Revision ID: 00c43b62b15d
Revises: 6c502a5c3069
Create Date: 2023-08-01 10:32:55.515473

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '00c43b62b15d'
down_revision = '6c502a5c3069'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('events', schema=None) as batch_op:
        batch_op.drop_constraint('events_event_configuration_id_fkey', type_='foreignkey')
        batch_op.drop_column('event_configuration_id')

    with op.batch_alter_table('events_history', schema=None) as batch_op:
        batch_op.drop_constraint('events_history_event_configuration_id_fkey', type_='foreignkey')
        batch_op.drop_column('event_configuration_id')

    with op.batch_alter_table('work_calendar_events', schema=None) as batch_op:
        batch_op.drop_constraint('work_calendar_events_event_configuration_id_fkey', type_='foreignkey')
        batch_op.drop_column('event_configuration_id')

    with op.batch_alter_table('work_calendar_events_history', schema=None) as batch_op:
        batch_op.drop_constraint('work_calendar_events_history_event_configuration_id_fkey', type_='foreignkey')
        batch_op.drop_column('event_configuration_id')
    op.drop_table('event_configurations')
    op.drop_table('event_configurations_history')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('work_calendar_events_history', schema=None) as batch_op:
        batch_op.add_column(sa.Column('event_configuration_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.create_foreign_key('work_calendar_events_history_event_configuration_id_fkey', 'event_configurations', ['event_configuration_id'], ['id'])

    with op.batch_alter_table('work_calendar_events', schema=None) as batch_op:
        batch_op.add_column(sa.Column('event_configuration_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.create_foreign_key('work_calendar_events_event_configuration_id_fkey', 'event_configurations', ['event_configuration_id'], ['id'])

    with op.batch_alter_table('events_history', schema=None) as batch_op:
        batch_op.add_column(sa.Column('event_configuration_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.create_foreign_key('events_history_event_configuration_id_fkey', 'event_configurations', ['event_configuration_id'], ['id'])

    with op.batch_alter_table('events', schema=None) as batch_op:
        batch_op.add_column(sa.Column('event_configuration_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.create_foreign_key('events_event_configuration_id_fkey', 'event_configurations', ['event_configuration_id'], ['id'])

    op.create_table('event_configurations_history',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('work_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('parent_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('phase_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('event_type_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('event_category_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('start_at', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('number_of_days', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('mandatory', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('sort_order', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('pk', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('during', postgresql.TSTZRANGE(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['event_category_id'], ['event_categories.id'], name='event_configurations_history_event_category_id_fkey'),
    sa.ForeignKeyConstraint(['event_type_id'], ['event_types.id'], name='event_configurations_history_event_type_id_fkey'),
    sa.ForeignKeyConstraint(['phase_id'], ['phase_codes.id'], name='event_configurations_history_phase_id_fkey'),
    sa.ForeignKeyConstraint(['work_id'], ['works.id'], name='event_configurations_history_work_id_fkey'),
    sa.PrimaryKeyConstraint('id', 'pk', name='event_configurations_history_pkey')
    )
    op.create_table('event_configurations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('work_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('parent_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('phase_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('event_type_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('event_category_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('start_at', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('number_of_days', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('mandatory', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('sort_order', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.Column('is_deleted', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['event_category_id'], ['event_categories.id'], name='event_configurations_event_category_id_fkey'),
    sa.ForeignKeyConstraint(['event_type_id'], ['event_types.id'], name='event_configurations_event_type_id_fkey'),
    sa.ForeignKeyConstraint(['phase_id'], ['phase_codes.id'], name='event_configurations_phase_id_fkey'),
    sa.ForeignKeyConstraint(['work_id'], ['works.id'], name='event_configurations_work_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='event_configurations_pkey')
    )
    # ### end Alembic commands ###
