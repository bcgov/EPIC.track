"""recreate_event_configuration

Revision ID: 2025a1d522b3
Revises: 00c43b62b15d
Create Date: 2023-08-01 10:49:04.677329

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '2025a1d522b3'
down_revision = '00c43b62b15d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute('TRUNCATE phase_codes RESTART IDENTITY CASCADE')
    op.execute('TRUNCATE work_calendar_events RESTART IDENTITY CASCADE')
    op.execute('TRUNCATE events RESTART IDENTITY CASCADE')
    op.create_table('event_configurations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('work_id', sa.Integer(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('phase_id', sa.Integer(), nullable=False),
    sa.Column('event_type_id', sa.Integer(), nullable=False),
    sa.Column('event_category_id', sa.Integer(), nullable=False),
    sa.Column('start_at', sa.String(), nullable=True),
    sa.Column('number_of_days', sa.Integer(), nullable=False),
    sa.Column('mandatory', sa.Boolean(), nullable=True),
    sa.Column('sort_order', sa.Integer(), nullable=False),
    sa.Column('created_by', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.Column('updated_by', sa.String(length=255), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default='t', nullable=False),
    sa.Column('is_deleted', sa.Boolean(), server_default='f', nullable=False),
    sa.ForeignKeyConstraint(['event_category_id'], ['event_categories.id'], ),
    sa.ForeignKeyConstraint(['event_type_id'], ['event_types.id'], ),
    sa.ForeignKeyConstraint(['phase_id'], ['phase_codes.id'], ),
    sa.ForeignKeyConstraint(['work_id'], ['works.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sqlite_autoincrement=True
    )
    op.create_table('event_configurations_history',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('name', sa.String(), autoincrement=False, nullable=True),
    sa.Column('work_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('parent_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('phase_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('event_type_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('event_category_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('start_at', sa.String(), autoincrement=False, nullable=True),
    sa.Column('number_of_days', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('mandatory', sa.Boolean(), autoincrement=False, nullable=True),
    sa.Column('sort_order', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.String(length=255), autoincrement=False, nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.String(length=255), autoincrement=False, nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.Boolean(), autoincrement=False, nullable=False),
    sa.Column('is_deleted', sa.Boolean(), autoincrement=False, nullable=False),
    sa.Column('pk', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('during', postgresql.TSTZRANGE(), nullable=True),
    sa.ForeignKeyConstraint(['event_category_id'], ['event_categories.id'], ),
    sa.ForeignKeyConstraint(['event_type_id'], ['event_types.id'], ),
    sa.ForeignKeyConstraint(['phase_id'], ['phase_codes.id'], ),
    sa.ForeignKeyConstraint(['work_id'], ['works.id'], ),
    sa.PrimaryKeyConstraint('id', 'pk'),
    sqlite_autoincrement=True
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('event_configurations_history')
    op.drop_table('event_configurations')
    # ### end Alembic commands ###
