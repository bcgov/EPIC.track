"""event table restructuring

Revision ID: 6045e1f69a20
Revises: 0d194d560099
Create Date: 2023-07-30 22:29:06.567650

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '6045e1f69a20'
down_revision = '0d194d560099'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('event_configurations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('work_id', sa.Integer(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('phase_id', sa.Integer(), nullable=False),
    sa.Column('event_type_id', sa.Integer(), nullable=False),
    sa.Column('event_category_id', sa.Integer(), nullable=False),
    sa.Column('start_at', sa.String(), nullable=True),
    sa.Column('number_of_days', sa.Integer(), nullable=False),
    sa.Column('mandatory', sa.Boolean(), nullable=True),
    sa.Column('sort_order', sa.Integer(), nullable=False),
    sa.Column('created_by', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.Column('updated_by', sa.String(length=255), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default='t', nullable=False),
    sa.Column('is_deleted', sa.Boolean(), server_default='f', nullable=False),
    sa.ForeignKeyConstraint(['event_category_id'], ['event_categories.id'], ),
    sa.ForeignKeyConstraint(['event_type_id'], ['event_types.id'], ),
    sa.ForeignKeyConstraint(['phase_id'], ['phase_codes.id'], ),
    sa.ForeignKeyConstraint(['work_id'], ['works.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sqlite_autoincrement=True
    )
    op.create_table('event_configurations_history',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('name', sa.String(), autoincrement=False, nullable=True),
    sa.Column('work_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('parent_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('phase_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('event_type_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('event_category_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('start_at', sa.String(), autoincrement=False, nullable=True),
    sa.Column('number_of_days', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('mandatory', sa.Boolean(), autoincrement=False, nullable=True),
    sa.Column('sort_order', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.String(length=255), autoincrement=False, nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.String(length=255), autoincrement=False, nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.Boolean(), autoincrement=False, nullable=False),
    sa.Column('is_deleted', sa.Boolean(), autoincrement=False, nullable=False),
    sa.Column('pk', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('during', postgresql.TSTZRANGE(), nullable=True),
    sa.ForeignKeyConstraint(['event_category_id'], ['event_categories.id'], ),
    sa.ForeignKeyConstraint(['event_type_id'], ['event_types.id'], ),
    sa.ForeignKeyConstraint(['phase_id'], ['phase_codes.id'], ),
    sa.ForeignKeyConstraint(['work_id'], ['works.id'], ),
    sa.PrimaryKeyConstraint('id', 'pk'),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('events', schema=None) as batch_op:
        batch_op.add_column(sa.Column('event_configuration_id', sa.Integer(), nullable=False))
        batch_op.drop_constraint('events_work_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('events_phase_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('events_event_type_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('events_event_category_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'event_configurations', ['event_configuration_id'], ['id'])
        batch_op.drop_column('event_category_id')
        batch_op.drop_column('event_type_id')
        batch_op.drop_column('phase_id')
        batch_op.drop_column('work_id')
        batch_op.drop_column('event_template_id')

    with op.batch_alter_table('events_history', schema=None) as batch_op:
        batch_op.add_column(sa.Column('event_configuration_id', sa.Integer(), autoincrement=False, nullable=False))
        batch_op.drop_constraint('events_history_event_category_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('events_history_event_type_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('events_history_phase_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('events_history_work_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'event_configurations', ['event_configuration_id'], ['id'])
        batch_op.drop_column('event_category_id')
        batch_op.drop_column('event_type_id')
        batch_op.drop_column('phase_id')
        batch_op.drop_column('work_id')
        batch_op.drop_column('event_template_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('events_history', schema=None) as batch_op:
        batch_op.add_column(sa.Column('event_template_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('work_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('phase_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('event_type_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('event_category_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('events_history_work_id_fkey', 'works', ['work_id'], ['id'])
        batch_op.create_foreign_key('events_history_phase_id_fkey', 'phase_codes', ['phase_id'], ['id'])
        batch_op.create_foreign_key('events_history_event_type_id_fkey', 'event_types', ['event_type_id'], ['id'])
        batch_op.create_foreign_key('events_history_event_category_id_fkey', 'event_categories', ['event_category_id'], ['id'])
        batch_op.drop_column('event_configuration_id')

    with op.batch_alter_table('events', schema=None) as batch_op:
        batch_op.add_column(sa.Column('event_template_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('work_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('phase_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('event_type_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('event_category_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('events_event_category_id_fkey', 'event_categories', ['event_category_id'], ['id'])
        batch_op.create_foreign_key('events_event_type_id_fkey', 'event_types', ['event_type_id'], ['id'])
        batch_op.create_foreign_key('events_phase_id_fkey', 'phase_codes', ['phase_id'], ['id'])
        batch_op.create_foreign_key('events_work_id_fkey', 'works', ['work_id'], ['id'])
        batch_op.drop_column('event_configuration_id')

    op.drop_table('event_configurations_history')
    op.drop_table('event_configurations')
    # ### end Alembic commands ###
