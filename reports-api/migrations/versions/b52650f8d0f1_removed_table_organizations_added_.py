"""removed table organizations added relationship holder to proponents

Revision ID: b52650f8d0f1
Revises: 7cf5a6bf38c1
Create Date: 2023-02-24 10:58:47.232789

"""
import json
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'b52650f8d0f1'
down_revision = '7cf5a6bf38c1'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('organizations')
    op.add_column('proponents', sa.Column('relationship_holder_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'proponents', 'staffs', ['relationship_holder_id'], ['id'])

    tables_to_update = [
        "ea_acts",
        "eao_teams",
        "federal_involvements",
        "indigenous_nations",
        "indigenous_categories",
        "milestone_types",
        "milestones",
        "ministries",
        "outcomes",
        "phase_codes",
        "positions",
        "proponents",
        "regions",
        "roles",
        "sub_types",
        "substitution_acts",
        "types",
        "work_types",
    ]
    conn = op.get_bind()
    for table in tables_to_update:
        entries = conn.execute(f"SELECT * FROM {table} WHERE name='None' ORDER BY id ")
        entries = entries.fetchall()
        data = [{'id': x['id'], 'sort_order': -1} for x in entries]
        op.execute(
            f"""
            UPDATE {table} set sort_order = data.sort_order FROM (
                SELECT  * FROM json_populate_recordset(null::{table},'%s')
            ) data
            WHERE {table}.id = data.id
            """ % json.dumps(data)
        )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('proponents_relationship_holder_id_fkey', 'proponents', type_='foreignkey')
    op.drop_column('proponents', 'relationship_holder_id')
    op.create_table('organizations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.Column('is_deleted', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('relationship_holder_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('sort_order', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['relationship_holder_id'], ['staffs.id'], name='organizations_relationship_holder_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='organizations_pkey')
    )
    # ### end Alembic commands ###
