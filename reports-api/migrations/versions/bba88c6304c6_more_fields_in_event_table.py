"""more fields in event table

Revision ID: bba88c6304c6
Revises: ce7d97eb386f
Create Date: 2023-10-04 13:08:09.578157

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'bba88c6304c6'
down_revision = 'ce7d97eb386f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('act_sections',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('sort_order', sa.Integer(), nullable=False),
    sa.Column('created_by', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.Column('updated_by', sa.String(length=255), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default='t', nullable=False),
    sa.Column('is_deleted', sa.Boolean(), server_default='f', nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sqlite_autoincrement=True
    )
    op.create_table('act_sections_history',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('name', sa.String(), autoincrement=False, nullable=True),
    sa.Column('sort_order', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.String(length=255), autoincrement=False, nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.String(length=255), autoincrement=False, nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.Boolean(), autoincrement=False, nullable=False),
    sa.Column('is_deleted', sa.Boolean(), autoincrement=False, nullable=False),
    sa.Column('pk', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('during', postgresql.TSTZRANGE(), nullable=True),
    sa.PrimaryKeyConstraint('id', 'pk'),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('event_configurations', schema=None) as batch_op:
        batch_op.drop_constraint('event_configurations_work_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('event_configurations_phase_id_fkey', type_='foreignkey')
        batch_op.drop_column('work_id')
        batch_op.drop_column('phase_id')

    with op.batch_alter_table('event_configurations_history', schema=None) as batch_op:
        batch_op.drop_constraint('event_configurations_history_phase_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('event_configurations_history_work_id_fkey', type_='foreignkey')
        batch_op.drop_column('work_id')
        batch_op.drop_column('phase_id')

    with op.batch_alter_table('events', schema=None) as batch_op:
        batch_op.add_column(sa.Column('high_priority', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('act_section_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('reason', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('decision_maker_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('number_of_attendees', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('topic', sa.String(), nullable=True))
        batch_op.create_foreign_key(None, 'act_sections', ['act_section_id'], ['id'])
        batch_op.create_foreign_key(None, 'staffs', ['decision_maker_id'], ['id'])

    with op.batch_alter_table('events_history', schema=None) as batch_op:
        batch_op.add_column(sa.Column('high_priority', sa.Boolean(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('act_section_id', sa.Integer(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('reason', sa.String(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('decision_maker_id', sa.Integer(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('number_of_attendees', sa.Integer(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('topic', sa.String(), autoincrement=False, nullable=True))
        batch_op.create_foreign_key(None, 'act_sections', ['act_section_id'], ['id'])
        batch_op.create_foreign_key(None, 'staffs', ['decision_maker_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('events_history', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('topic')
        batch_op.drop_column('number_of_attendees')
        batch_op.drop_column('decision_maker_id')
        batch_op.drop_column('reason')
        batch_op.drop_column('act_section_id')
        batch_op.drop_column('high_priority')

    with op.batch_alter_table('events', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('topic')
        batch_op.drop_column('number_of_attendees')
        batch_op.drop_column('decision_maker_id')
        batch_op.drop_column('reason')
        batch_op.drop_column('act_section_id')
        batch_op.drop_column('high_priority')

    with op.batch_alter_table('event_configurations_history', schema=None) as batch_op:
        batch_op.add_column(sa.Column('phase_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('work_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.create_foreign_key('event_configurations_history_work_id_fkey', 'works', ['work_id'], ['id'])
        batch_op.create_foreign_key('event_configurations_history_phase_id_fkey', 'phase_codes', ['phase_id'], ['id'])

    with op.batch_alter_table('event_configurations', schema=None) as batch_op:
        batch_op.add_column(sa.Column('phase_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('work_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.create_foreign_key('event_configurations_phase_id_fkey', 'phase_codes', ['phase_id'], ['id'])
        batch_op.create_foreign_key('event_configurations_work_id_fkey', 'works', ['work_id'], ['id'])

    op.drop_table('act_sections_history')
    op.drop_table('act_sections')
    # ### end Alembic commands ###
