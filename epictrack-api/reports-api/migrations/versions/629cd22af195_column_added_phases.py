"""column_added_phases

Revision ID: 629cd22af195
Revises: 6730aa78ca54
Create Date: 2022-02-21 12:04:50.946648

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.sql import column,table


# revision identifiers, used by Alembic.
revision = '629cd22af195'
down_revision = '6730aa78ca54'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute('TRUNCATE TABLE phase_codes')
    op.alter_column('ea_acts', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('federal_involvements', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('ministries', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.add_column('phase_codes', sa.Column('ea_act_id', sa.Integer(), nullable=False))
    op.create_foreign_key(None, 'phase_codes', 'ea_acts', ['ea_act_id'], ['id'])
    phase_code = table('phase_codes',
                    column('sort_order',sa.Integer),
                    column('work_type_id',sa.Integer),
                    column('ea_act_id',sa.Integer),
                    column('start_event',sa.String),
                    column('end_event',sa.String),
                    column('duration',sa.Integer),
                    column('legislated',sa.Boolean),
                    column('name',sa.String))
    op.alter_column('proponents', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('proponents', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('regions', 'entity',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('regions', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('sectors', 'short_name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('sectors', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('sub_sectors', 'short_name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('sub_sectors', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.bulk_insert(
        phase_code,
        [
            {
                'sort_order': 1,
                'name': 'Early Engagement',
                'work_type_id': 6,
                'ea_act_id': 3,
                'start_event': 'Initial Project Description accepted',
                'end_event': 'Summary of Engagement Issued',
                'duration': 90,
                'legislated': True
            },
            {
                'sort_order': 2,
                'name': 'Proponent Time: Project Description',
                'work_type_id': 6,
                'ea_act_id': 3,
                'start_event': 'Day after the posting of Summary of Engagment',
                'end_event': 'Day before the submission of DPD',
                'duration': 365,
                'legislated': False
            },
            {
                'sort_order': 3,
                'name': 'Readiness Decision',
                'work_type_id': 6,
                'ea_act_id': 3,
                'start_event': 'Submission of DPD',
                'end_event': 'Ministers\' Decision',
                'duration': 60,
                'legislated': False
            }, {
            'sort_order': 4,
            'name': 'Process Planning',
            'work_type_id': 6,
            'ea_act_id': 3,
            'start_event': 'Day after Ministers\' Decision',
            'end_event': 'Process Order Issued',
            'duration': 120,
            'legislated': True
        }, {
            'sort_order': 5,
            'name': 'Proponent Time: Application Development',
            'work_type_id': 6,
            'ea_act_id': 3,
            'start_event': 'Day after Process Order issued',
            'end_event': 'Day before the acceptance of the Application',
            'duration': 1095,
            'legislated': False
        }, {
            'sort_order': 6,
            'name': 'Application Development & Review',
            'work_type_id': 6,
            'ea_act_id': 3,
            'start_event': 'Application for an EAC accepted',
            'end_event': 'Notice Regarding Application',
            'duration': 180,
            'legislated': True
        }, {
            'sort_order': 7,
            'name': 'Proponent Time: Revised Application',
            'work_type_id': 6,
            'ea_act_id': 3,
            'start_event': 'Day after Notice',
            'end_event': 'Day before Revised Application',
            'duration': 365,
            'legislated': False
        }, {
            'sort_order': 8,
            'name': 'Effects Assessment',
            'work_type_id': 6,
            'ea_act_id': 3,
            'start_event': 'Revised Application Submitted',
            'end_event': 'Draft Assessment Report is issued',
            'duration': 110,
            'legislated': True
        }, {
            'sort_order': 9,
            'name': 'Recommendation',
            'work_type_id': 6,
            'ea_act_id': 3,
            'start_event': 'PECP starts for Draft Assessment Report?',
            'end_event': 'Package sent to Ministers',
            'duration': 40,
            'legislated': True
        }, {
            'sort_order': 10,
            'name': 'Referral/Decision',
            'work_type_id': 6,
            'ea_act_id': 3,
            'start_event': 'Referral Package Received',
            'end_event': 'Minister\'s Decision',
            'duration': 30,
            'legislated': True
        }
        ])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('sub_sectors', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('sub_sectors', 'short_name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('sectors', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('sectors', 'short_name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('regions', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('regions', 'entity',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('proponents', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('proponents', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.drop_constraint(None, 'phase_codes', type_='foreignkey')
    op.drop_column('phase_codes', 'ea_act_id')
    op.alter_column('ministries', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('federal_involvements', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('ea_acts', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    # ### end Alembic commands ###
