"""allow_null_event_template

Revision ID: 17bbbfded956
Revises: 8c21f60f2c49
Create Date: 2023-07-29 17:39:53.203707

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '17bbbfded956'
down_revision = '8c21f60f2c49'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute('TRUNCATE event_types RESTART IDENTITY CASCADE')
    op.execute('TRUNCATE event_categories RESTART IDENTITY CASCADE')
    event_config = [
        {
            "category": "Milestone",
            "types": [
                "Generic",
                "Meeting",
                "Notification",
                "Order",
                "Referral",
                "Report",
                "Request",
                "Submission",
                "Other",
            ],
        },
        {
            "category": "Extension",
            "types": [
                "Time Limit Extension",
                "PCP Time Limit Extension",
            ],
        },
        {"category": "Suspension", "types": ["Time Limit Suspension"]},
        {
            "category": "Decision",
            "types": [
                "EAC Ministers",
                "Minister",
                "CEAO",
                "ADM",
                "EPD",
                "PAD (Lead)",
                "Reviewer",
                "Federal",
                "Other",
            ],
        },
        {
            "category": "PCP",
            "types": [
                "Comment Period",
                "Open House",
                "Virtual Information Session",
                "Time Limit Extension",
                "Other",
            ],
        },
        {
            "category": "Calendar",
            "types": ["Communications", "Executive", "Financial", "Work", "Other"],
        },
        {
            "category": "Finance",
            "types": [
                "Capacity Funding",
                "Fee Order",
                "Penalties",
                "Administrative",
                "Other",
            ],
        },
    ]
    conn = op.get_bind()
    event_category = sa.sql.table(
        "event_categories",
        sa.Column("id", sa.Integer),
        sa.Column("name", sa.String),
        sa.Column("sort_order", sa.Integer),
    )
    event_types = sa.sql.table(
        "event_types",
        sa.Column("id", sa.Integer),
        sa.Column("name", sa.String),
        sa.Column("event_category_id", sa.Integer),
        sa.Column("sort_order", sa.Integer),
    )
    for conf_index, conf in enumerate(event_config):
        cat_obj = conn.execute(
            event_category.insert()
            .values(name=conf["category"], sort_order=(conf_index + 1))
            .returning((event_category.c.id).label("id"))
        )
        cat_obj = cat_obj.mappings().first()
        cat_id = cat_obj["id"]
        for type_index, type in enumerate(conf["types"]):
            conn.execute(
                event_types.insert().values(
                    name=type,
                    event_category_id=cat_id,
                    sort_order=(type_index + 1),
                )
            )
    with op.batch_alter_table('event_templates', schema=None) as batch_op:
        batch_op.drop_column('parent_template_id')

    with op.batch_alter_table('event_templates_history', schema=None) as batch_op:
        batch_op.drop_column('parent_template_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('event_templates_history', schema=None) as batch_op:
        batch_op.add_column(sa.Column('parent_template_id', sa.INTEGER(), autoincrement=False, nullable=True))

    with op.batch_alter_table('event_templates', schema=None) as batch_op:
        batch_op.add_column(sa.Column('parent_template_id', sa.INTEGER(), autoincrement=False, nullable=True))

    # ### end Alembic commands ###
