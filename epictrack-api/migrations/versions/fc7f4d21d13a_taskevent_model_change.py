"""taskEvent model change

Revision ID: fc7f4d21d13a
Revises: b7e53dd4b2f1
Create Date: 2023-08-15 12:52:36.267786

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'fc7f4d21d13a'
down_revision = 'b7e53dd4b2f1'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('task_events', schema=None) as batch_op:
        batch_op.add_column(sa.Column('start_date', sa.DateTime(timezone=True), nullable=True))
        batch_op.alter_column('responsibility_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.drop_column('actual_date')
        batch_op.drop_column('anticipated_date')

    with op.batch_alter_table('task_events_history', schema=None) as batch_op:
        batch_op.add_column(sa.Column('start_date', sa.DateTime(timezone=True), autoincrement=False, nullable=True))
        batch_op.alter_column('responsibility_id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=False)
        batch_op.drop_column('actual_date')
        batch_op.drop_column('anticipated_date')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('task_events_history', schema=None) as batch_op:
        batch_op.add_column(sa.Column('anticipated_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('actual_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
        batch_op.alter_column('responsibility_id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=False)
        batch_op.drop_column('start_date')

    with op.batch_alter_table('task_events', schema=None) as batch_op:
        batch_op.add_column(sa.Column('anticipated_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('actual_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
        batch_op.alter_column('responsibility_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_column('start_date')

    # ### end Alembic commands ###
