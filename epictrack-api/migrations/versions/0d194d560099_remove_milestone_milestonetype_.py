"""remove milestone, milestonetype, enagements

Revision ID: 0d194d560099
Revises: 17bbbfded956
Create Date: 2023-07-30 20:18:48.692257

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '0d194d560099'
down_revision = '17bbbfded956'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("TRUNCATE work_engagements CASCADE")
    op.execute("TRUNCATE work_engagements_history CASCADE")
    op.execute("TRUNCATE milestones CASCADE")
    op.drop_constraint("work_engagements_history_milestone_id_fkey", "work_engagements_history")
    op.drop_table('work_engagements')
    op.drop_table('milestones')
    op.drop_table('work_engagements_history')
    op.drop_table('engagements_history')
    op.drop_table('milestones_history')
    op.drop_table('engagements')
    with op.batch_alter_table('events', schema=None) as batch_op:
        batch_op.add_column(sa.Column('event_template_id', sa.Integer(), nullable=False))

    with op.batch_alter_table('events_history', schema=None) as batch_op:
        batch_op.add_column(sa.Column('event_template_id', sa.Integer(), autoincrement=False, nullable=False))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('events_history', schema=None) as batch_op:
        batch_op.drop_column('event_template_id')

    with op.batch_alter_table('events', schema=None) as batch_op:
        batch_op.drop_column('event_template_id')

    op.create_table('engagements',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('engagements_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('start_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('end_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('correlation_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('met_link', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('work_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['work_id'], ['works.id'], name='engagements_work_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='engagements_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('milestones_history',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('phase_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('milestone_type_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('sort_order', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('start_at', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('duration', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('kind', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('auto', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('pk', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('during', postgresql.TSTZRANGE(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['milestone_type_id'], ['milestone_types.id'], name='milestones_history_milestone_type_id_fkey'),
    sa.ForeignKeyConstraint(['phase_id'], ['phase_codes.id'], name='milestones_history_phase_id_fkey'),
    sa.PrimaryKeyConstraint('id', 'pk', name='milestones_history_pkey')
    )
    op.create_table('engagements_history',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('start_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('end_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('correlation_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('met_link', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('work_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('pk', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('during', postgresql.TSTZRANGE(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['work_id'], ['works.id'], name='engagements_history_work_id_fkey'),
    sa.PrimaryKeyConstraint('id', 'pk', name='engagements_history_pkey')
    )
    op.create_table('work_engagements_history',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('project_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('work_type_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('phase_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('milestone_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('engagement_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('pk', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('during', postgresql.TSTZRANGE(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['engagement_id'], ['engagements.id'], name='work_engagements_history_engagement_id_fkey'),
    sa.ForeignKeyConstraint(['milestone_id'], ['milestones.id'], name='work_engagements_history_milestone_id_fkey'),
    sa.ForeignKeyConstraint(['phase_id'], ['phase_codes.id'], name='work_engagements_history_phase_id_fkey'),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name='work_engagements_history_project_id_fkey'),
    sa.ForeignKeyConstraint(['work_type_id'], ['work_types.id'], name='work_engagements_history_work_type_id_fkey'),
    sa.PrimaryKeyConstraint('id', 'pk', name='work_engagements_history_pkey')
    )
    op.create_table('milestones',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('milestones_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('phase_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('milestone_type_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('sort_order', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('start_at', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('duration', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('kind', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('auto', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.Column('is_deleted', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['milestone_type_id'], ['milestone_types.id'], name='milestones_milestone_type_id_fkey'),
    sa.ForeignKeyConstraint(['phase_id'], ['phase_codes.id'], name='milestones_phase_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='milestones_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('work_engagements',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('project_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('work_type_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('phase_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('engagement_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('milestone_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.Column('is_deleted', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['engagement_id'], ['engagements.id'], name='work_engagements_engagement_id_fkey'),
    sa.ForeignKeyConstraint(['milestone_id'], ['milestones.id'], name='work_engagements_milestone_id_fkey'),
    sa.ForeignKeyConstraint(['phase_id'], ['phase_codes.id'], name='work_engagements_phase_id_fkey'),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name='work_engagements_project_id_fkey'),
    sa.ForeignKeyConstraint(['work_type_id'], ['work_types.id'], name='work_engagements_work_type_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='work_engagements_pkey')
    )
    # ### end Alembic commands ###
