"""issue and status

Revision ID: 8e4bb9cd046c
Revises: f9bcc9a0564b
Create Date: 2023-11-02 09:00:55.167458

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '8e4bb9cd046c'
down_revision = 'f9bcc9a0564b'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('work_issues',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(length=500), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_high_priority', sa.Boolean(), nullable=False),
    sa.Column('start_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('expected_resolution_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_approved', sa.Boolean(), nullable=False),
    sa.Column('approved_by', sa.String(length=255), nullable=True),
    sa.Column('work_id', sa.Integer(), nullable=False),
    sa.Column('created_by', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.Column('updated_by', sa.String(length=255), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), server_default='f', nullable=False),
    sa.ForeignKeyConstraint(['work_id'], ['works.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sqlite_autoincrement=True
    )
    op.create_table('work_issues_history',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('title', sa.String(length=500), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.Boolean(), autoincrement=False, nullable=False),
    sa.Column('is_high_priority', sa.Boolean(), autoincrement=False, nullable=False),
    sa.Column('start_date', sa.DateTime(timezone=True), autoincrement=False, nullable=False),
    sa.Column('expected_resolution_date', sa.DateTime(timezone=True), autoincrement=False, nullable=True),
    sa.Column('is_approved', sa.Boolean(), autoincrement=False, nullable=False),
    sa.Column('approved_by', sa.String(length=255), autoincrement=False, nullable=True),
    sa.Column('work_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.String(length=255), autoincrement=False, nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.String(length=255), autoincrement=False, nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), autoincrement=False, nullable=True),
    sa.Column('is_deleted', sa.Boolean(), autoincrement=False, nullable=False),
    sa.Column('pk', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('during', postgresql.TSTZRANGE(), nullable=True),
    sa.ForeignKeyConstraint(['work_id'], ['works.id'], ),
    sa.PrimaryKeyConstraint('id', 'pk'),
    sqlite_autoincrement=True
    )
    op.create_table('work_issue_updates',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('description', sa.String(length=2000), nullable=False),
    sa.Column('work_issue_id', sa.Integer(), nullable=False),
    sa.Column('created_by', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.Column('updated_by', sa.String(length=255), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default='t', nullable=False),
    sa.Column('is_deleted', sa.Boolean(), server_default='f', nullable=False),
    sa.ForeignKeyConstraint(['work_issue_id'], ['work_issues.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sqlite_autoincrement=True
    )
    op.create_table('work_issue_updates_history',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('description', sa.String(length=2000), autoincrement=False, nullable=False),
    sa.Column('work_issue_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.String(length=255), autoincrement=False, nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.String(length=255), autoincrement=False, nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.Boolean(), autoincrement=False, nullable=False),
    sa.Column('is_deleted', sa.Boolean(), autoincrement=False, nullable=False),
    sa.Column('pk', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('during', postgresql.TSTZRANGE(), nullable=True),
    sa.ForeignKeyConstraint(['work_issue_id'], ['work_issues.id'], ),
    sa.PrimaryKeyConstraint('id', 'pk'),
    sqlite_autoincrement=True
    )
    op.drop_table('issues_history')
    op.drop_table('issues')
    with op.batch_alter_table('work_statuses', schema=None) as batch_op:
        batch_op.add_column(sa.Column('description', sa.String(length=2000), nullable=False))
        batch_op.add_column(sa.Column('notes', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('is_approved', sa.Boolean(), nullable=False))
        batch_op.add_column(sa.Column('approved_by', sa.String(length=255), nullable=True))
        batch_op.drop_column('status_text')
        batch_op.drop_column('work_status_notes')

    with op.batch_alter_table('work_statuses_history', schema=None) as batch_op:
        batch_op.add_column(sa.Column('description', sa.String(length=2000), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('notes', sa.Text(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('is_approved', sa.Boolean(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('approved_by', sa.String(length=255), autoincrement=False, nullable=True))
        batch_op.drop_column('status_text')
        batch_op.drop_column('work_status_notes')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('work_statuses_history', schema=None) as batch_op:
        batch_op.add_column(sa.Column('work_status_notes', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('status_text', sa.VARCHAR(length=2000), autoincrement=False, nullable=False))
        batch_op.drop_column('approved_by')
        batch_op.drop_column('is_approved')
        batch_op.drop_column('notes')
        batch_op.drop_column('description')

    with op.batch_alter_table('work_statuses', schema=None) as batch_op:
        batch_op.add_column(sa.Column('work_status_notes', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('status_text', sa.VARCHAR(length=2000), autoincrement=False, nullable=False))
        batch_op.drop_column('approved_by')
        batch_op.drop_column('is_approved')
        batch_op.drop_column('notes')
        batch_op.drop_column('description')

    op.create_table('issues',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('short_description', sa.VARCHAR(length=2000), autoincrement=False, nullable=False),
    sa.Column('long_description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('is_key_issue', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('is_sensitive', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.Column('is_resolved', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('start_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('anticipated_resolution_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('resolution_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('work_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['work_id'], ['works.id'], name='issues_work_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='issues_pkey')
    )
    op.create_table('issues_history',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('short_description', sa.VARCHAR(length=2000), autoincrement=False, nullable=False),
    sa.Column('long_description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('is_key_issue', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('is_sensitive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('is_resolved', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('start_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('anticipated_resolution_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('resolution_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('work_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('pk', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('during', postgresql.TSTZRANGE(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['work_id'], ['works.id'], name='issues_history_work_id_fkey'),
    sa.PrimaryKeyConstraint('id', 'pk', name='issues_history_pkey')
    )
    op.drop_table('work_issue_updates_history')
    op.drop_table('work_issue_updates')
    op.drop_table('work_issues_history')
    op.drop_table('work_issues')
    # ### end Alembic commands ###
