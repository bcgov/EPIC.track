name: Report API CI

on:
  pull_request:
    branches:
      - develop
    paths:
      - "reports-api/**"

defaults:
  run:
    shell: bash
    working-directory: ./reports-api

jobs:
  setup-job:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2
      - run: "true"

  linting:
    needs: setup-job
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        python-version: [3.8]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install libsasl2-dev libldap2-dev libssl-dev --yes
          make setup
      - name: Lint with pylint
        id: pylint
        run: |
          make pylint
      - name: Lint with flake8
        id: flake8
        run: |
          make flake8


  # PyTest:
  #   needs: setup-job
  #   env:
  #     FLASK_ENV: "testing"
  #     DATABASE_TEST_URL: "postgresql://postgres:postgres@localhost:54333/postgres"

  #   runs-on: ubuntu-20.04

  #   services:
  #     postgres:
  #       image: postgres:latest
  #       env:
  #         POSTGRES_USER: postgres
  #         POSTGRES_PASSWORD: postgres
  #         POSTGRES_DB: postgres
  #       ports:
  #         - 54333:5432
  #       # needed because the postgres container does not provide a healthcheck
  #       options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0
  #     - name: Set up Python ${{ matrix.python-version }}
  #       uses: actions/setup-python@v1
  #       with:
  #         python-version: ${{ matrix.python-version }}
  #     - name: Install dependencies
  #       run: |
  #         make setup
  #     - name: Test
  #       id: test
  #       run: |
  #         make test

  build:
    # needs: PyTest
    runs-on: ubuntu-20.04
    name: Build
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Build
        run: |
          docker build . -t reports-api
